{"version":3,"sources":["components/Button.module.css","assignment1/ButtonA.module.css","assignment1/Card.module.css","logo.svg","assignment1/Input.module.css","assignment1/Select.module.css","assignment1/TextArea.module.css","components/Button.js","components/ContactForm/ContactForm.js","assignment1/ButtonA.js","assignment1/Input.js","assignment1/Select.js","assignment1/TextArea.js","assignment1/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","button","success","danger","shadow","card","container","__webpack_require__","p","input","select","select-selected","textArea","Button","props","_useState","useState","_useState2","Object","slicedToArray","setShadow","children","color","handleClick","throwAwayProp","console","log","react_default","a","createElement","type","className","concat","styles","onClick","onMouseOver","onMouseOut","ContactForm","name","setName","_useState3","_useState4","setInput2","_useState5","_useState6","setInput3","onSubmit","event","preventDefault","handleSubmit","value","onChange","target","ButtonA","Input","setValue","placeholder","handleOnChange","Select","TextArea","rows","cols","Card","imageLink","title","text","src","alt","createAlert","alert","App","showLogo","setShowLogo","throwAway","logo","href","rel","components_Button","components_ContactForm_ContactForm","assignment1_ButtonA","assignment1_Input","assignment1_Select","assignment1_TextArea","assignment1_Card","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c589195c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Zdzk\",\"success\":\"Button_success__27xXg\",\"danger\":\"Button_danger__u46Mt\",\"shadow\":\"Button_shadow__1zDUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonA_button__1LxrG\",\"success\":\"ButtonA_success__3ZbKC\",\"danger\":\"ButtonA_danger__2ouvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3ofc6\",\"container\":\"Card_container__3rZNQ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2Clpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__20GT0\",\"select-selected\":\"Select_select-selected__Sl56t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textArea\":\"TextArea_textArea__3am0H\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\n/*\r\n    CSS modules allow you to reuse class names in different components\r\n    class names are generated after you build the react app\r\n    reduces the likelihood of classes clashing.\r\n    If you target tags, you won't get the benefits of CSS modules\r\n*/\r\n\r\nconst Button = (props) => {\r\n    // The shadow state will be internally managed by the button\r\n    const [shadow, setShadow] = useState(false);\r\n    const {children, color, handleClick, throwAwayProp} = props;\r\n    // throwAwayProp is data that comes from App.js state.\r\n    // From the perspective of the Button.js component, throwAway\r\n    // is data that is external, therefore it is a prop to the Button\r\n    // but a state to App.js\r\n    console.log(throwAwayProp)\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={`${styles.button} ${styles[color]} ${shadow ? styles.shadow : ''}`}\r\n            onClick={handleClick}\r\n            onMouseOver={ () => setShadow(true)}\r\n            onMouseOut={() => setShadow(false)}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\n// Props\r\n/*\r\n    children - string, html element, React Component\r\n    handleClick - function\r\n    color - string\r\n*/\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    handleClick: PropTypes.func,\r\n    throwAwayProp: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.element,\r\n        PropTypes.node,\r\n    ]),\r\n};\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\n\r\nconst ContactForm = () => {\r\n    // Whenever a state value changes, the component re-renders\r\n    const [name, setName] = useState('Input 1 here');\r\n    const [input2, setInput2] = useState('Input 2 here');\r\n    const [input3, setInput3] = useState('A');\r\n    // In this case, when setName is run, the component re-renders\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(name);\r\n        // Make an api call that submits the form data somewhere\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(event) => handleSubmit(event)}>\r\n            {/*\r\n                Controlled components are form components that are controlled \r\n                by some sort of state.\r\n            */}\r\n            <span>Input 1: </span>  \r\n            <input \r\n                type=\"text\" \r\n                name=\"fullName\"\r\n                value={name} \r\n                onChange={(event) => setName(event.target.value)} \r\n            /><br/>\r\n            <span>Input 2: </span>  \r\n            <input \r\n                type=\"text\" \r\n                name=\"fullName\"\r\n                onChange={(event) => setInput2(event.target.value)} \r\n            /><br/>\r\n            <span>Input 3: </span>\r\n            <select \r\n                name=\"selections\"\r\n                onChange={(event) => setInput3(event.target.value)}\r\n            >\r\n                <option value=\"A\">A</option>\r\n                <option value=\"B\">B</option>\r\n                <option value=\"C\">C</option>\r\n                <option value=\"D\">D</option>\r\n            </select><br/>\r\n            \r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ButtonA.module.css';\r\n\r\nconst ButtonA = (props) => {\r\n\r\n    //States\r\n\r\n    //Props\r\n    const {onClick, color, children} = props;\r\n\r\n    return (\r\n        <button \r\n            onClick={onClick} \r\n            type=\"button\"\r\n            className={`${styles.button} ${styles[color || \"success\"]}`}>\r\n        {children}\r\n        </button>\r\n    );\r\n};\r\n\r\n// Props\r\nButtonA.propTypes = {\r\n    onClick: PropTypes.func,\r\n    color: PropTypes.string,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.element,\r\n        PropTypes.node,\r\n    ])\r\n};\r\n\r\nexport default ButtonA;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n\r\n    //States\r\n    const [value, setValue] = useState('');\r\n\r\n    //Props\r\n    const {onChange, type, placeholder} = props;\r\n\r\n    const handleOnChange = (event, onChange) => {\r\n        setValue(event.target.value);\r\n        onChange();\r\n    }\r\n\r\n    return (\r\n        <input \r\n            onChange={(event) => handleOnChange(event, onChange)} \r\n            type={type} \r\n            placeholder={placeholder || \"This is my custom input\"}\r\n            value={value}\r\n            className={styles.input}\r\n        />\r\n    );\r\n};\r\n\r\n// Prop Types\r\nInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Select.module.css';\r\n\r\nconst Select = (props) => {\r\n\r\n    //States\r\n\r\n    //Props\r\n    const {onChange, children} = props;\r\n\r\n    return (\r\n        <select onChange={onChange} className={styles.select}>\r\n        {children}\r\n        </select>\r\n    );\r\n};\r\n\r\n// Props\r\nSelect.propTypes = {\r\n    onChange: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.element,\r\n        PropTypes.node,\r\n    ])\r\n};\r\n\r\nexport default Select;\r\n\r\n/*  Test children\r\n\r\n    <option value=\"volvo\">Volvo</option>\r\n    <option value=\"saab\">Saab</option>\r\n    <option value=\"opel\">Opel</option>\r\n    <option value=\"audi\">Audi</option>\r\n*/","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TextArea.module.css';\r\n\r\nconst TextArea = (props) => {\r\n\r\n    //States\r\n    const [value, setValue] = useState('');\r\n\r\n    //Props\r\n    const {onChange, rows, cols, placeholder} = props;\r\n\r\n    const handleOnChange = (event, onChange) => {\r\n        setValue(event.target.value);\r\n        onChange();\r\n    }\r\n\r\n    return (\r\n        <textarea \r\n            onChange={(event) => handleOnChange(event, onChange)} \r\n            rows={rows} \r\n            cols={cols} \r\n            placeholder={placeholder || \"This is my custom text area\"}\r\n            value={value}\r\n            className={styles.textArea}>\r\n        </textarea>\r\n    );\r\n};\r\n\r\n// Props\r\nTextArea.propTypes = {\r\n    onChange: PropTypes.func,\r\n    rows: PropTypes.number,\r\n    cols: PropTypes.number,\r\n    placeholder: PropTypes.string\r\n};\r\n\r\nexport default TextArea;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n\r\n    //States\r\n\r\n    //Props\r\n    const {imageLink, title, text} = props;\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <img src={imageLink || \"https://www.w3schools.com/howto/img_avatar.png\"} alt=\"Avatar\"/>\r\n            <div className={styles.container}>\r\n                <h3>{title || \"Title\"}</h3>\r\n                <p>{text || \"Sample text goes here\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Props\r\nCard.propTypes = {\r\n    imageLink: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n};\r\n\r\nexport default Card;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from './components/Button';\nimport ContactForm from './components/ContactForm/ContactForm';\n\n//Asignment 1 imports\nimport ButtonA from './assignment1/ButtonA';\nimport Input from './assignment1/Input';\nimport Select from './assignment1/Select';\nimport TextArea from './assignment1/TextArea';\nimport Card from './assignment1/Card';\n\n\nconst createAlert = () => {\n  alert('OnChange Alert');\n}\n\n// You can run functions or you can reference them\n// because functions in Javascript are essentially objects\n// console.log(createAlert);\n\n// Whenever there is a state change in a component\n// the state value will update to the new value\n// and the component will re-render (re-run)\n\nfunction App() {\n  //Create a state\n  const [showLogo, setShowLogo] = useState(true);\n  const [throwAway, setThrowAway] = useState('randomtext');\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {showLogo && (<img src={logo} className=\"App-logo\" alt=\"logo\" />)}\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        {<Button color=\"danger\" handleClick={createAlert} throwAwayProp={throwAway}>\n          <span>arrow</span>\n          <span> \n            Click Me as a Prop! \n          </span>\n        </Button>}\n        {/*\n          When passing functions that require parameters as props\n          you have to wrap it in an arrow function to prevent it from\n          running immediately on load\n        */}\n        <Button color=\"success\" handleClick={() => setShowLogo(!showLogo)}>\n          My Second Button \n        </Button>\n        <hr />\n        <ContactForm />\n        <hr />\n        <ButtonA color=\"success\" onClick={createAlert}>\n        My custom button\n        </ButtonA>\n        <hr />\n        <Input onChange={createAlert} type=\"text\" placeholder=\"This is my custom input from App.js\"/>\n        <hr />\n        <Select onChange={createAlert}>\n        <option value=\"volvo\">Volvo</option>\n        <option value=\"saab\">Saab</option>\n        <option value=\"opel\">Opel</option>\n        <option value=\"audi\">Audi</option>\n        </Select>\n        <hr />\n        <TextArea onChange={createAlert} rows={4} cols ={50} placeholder=\"This is my custom text area from App.js\">\n        </TextArea>\n        <hr />\n        <Card title='Anthony' text='My custom card' />\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}